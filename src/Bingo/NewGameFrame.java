/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Bingo;

import java.awt.Color;
import java.util.Random;
import Bingo.*;

/**
 *
 * @author GP Kulam
 */
public class NewGameFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewGameFrame
     */
    
    //data Members used
    int Entry;
    //A stack that stores the distinct random numbers
    int stack[] = new int[25];
    int top = 0;
    //a 2D array for storing the values on all buttons in order
    int ButtonArray[][] = new int[5][5];
    int x; //stores the random number generated in function giverandom()
    int BingoCount = 0; //winner decider variable
    ComputerBoardFrame c1 = new ComputerBoardFrame(); 
    Computer c =  new Computer();
    public NewGameFrame() {
        initComponents();
        PauseButton.setVisible(false);
        Opponent.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        B1 = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        B5 = new javax.swing.JButton();
        B6 = new javax.swing.JButton();
        B7 = new javax.swing.JButton();
        B8 = new javax.swing.JButton();
        B9 = new javax.swing.JButton();
        B10 = new javax.swing.JButton();
        B11 = new javax.swing.JButton();
        B12 = new javax.swing.JButton();
        B13 = new javax.swing.JButton();
        B14 = new javax.swing.JButton();
        B15 = new javax.swing.JButton();
        B16 = new javax.swing.JButton();
        B17 = new javax.swing.JButton();
        B18 = new javax.swing.JButton();
        B19 = new javax.swing.JButton();
        B20 = new javax.swing.JButton();
        B21 = new javax.swing.JButton();
        B22 = new javax.swing.JButton();
        B23 = new javax.swing.JButton();
        B24 = new javax.swing.JButton();
        B25 = new javax.swing.JButton();
        FillTableButton = new javax.swing.JButton();
        EnterValueButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BLabel = new javax.swing.JLabel();
        ILabel = new javax.swing.JLabel();
        NLabel = new javax.swing.JLabel();
        OLabel = new javax.swing.JLabel();
        GLabel = new javax.swing.JLabel();
        PauseButton = new javax.swing.JButton();
        Opponent = new javax.swing.JButton();
        Retry = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NewGame");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setName("GameBoard"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(330, 330));

        B1.setBackground(new java.awt.Color(255, 153, 51));
        B1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B1.setForeground(new java.awt.Color(255, 255, 255));
        B1.setActionCommand("B1");
        B1.setPreferredSize(new java.awt.Dimension(60, 60));

        B2.setBackground(new java.awt.Color(255, 153, 51));
        B2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B2.setForeground(new java.awt.Color(255, 255, 255));
        B2.setActionCommand("B2");
        B2.setPreferredSize(new java.awt.Dimension(60, 60));

        B3.setBackground(new java.awt.Color(255, 153, 51));
        B3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B3.setForeground(new java.awt.Color(255, 255, 255));
        B3.setActionCommand("B3");
        B3.setPreferredSize(new java.awt.Dimension(60, 60));

        B4.setBackground(new java.awt.Color(255, 153, 51));
        B4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B4.setForeground(new java.awt.Color(255, 255, 255));
        B4.setActionCommand("B4");
        B4.setPreferredSize(new java.awt.Dimension(60, 60));

        B5.setBackground(new java.awt.Color(255, 153, 51));
        B5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B5.setForeground(new java.awt.Color(255, 255, 255));
        B5.setActionCommand("B5");
        B5.setPreferredSize(new java.awt.Dimension(60, 60));

        B6.setBackground(new java.awt.Color(255, 153, 51));
        B6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B6.setForeground(new java.awt.Color(255, 255, 255));
        B6.setActionCommand("B6");
        B6.setPreferredSize(new java.awt.Dimension(60, 60));

        B7.setBackground(new java.awt.Color(255, 153, 51));
        B7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B7.setForeground(new java.awt.Color(255, 255, 255));
        B7.setActionCommand("B7");
        B7.setPreferredSize(new java.awt.Dimension(60, 60));

        B8.setBackground(new java.awt.Color(255, 153, 51));
        B8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B8.setForeground(new java.awt.Color(255, 255, 255));
        B8.setActionCommand("B8");
        B8.setPreferredSize(new java.awt.Dimension(60, 60));

        B9.setBackground(new java.awt.Color(255, 153, 51));
        B9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B9.setForeground(new java.awt.Color(255, 255, 255));
        B9.setActionCommand("B9");
        B9.setPreferredSize(new java.awt.Dimension(60, 60));

        B10.setBackground(new java.awt.Color(255, 153, 51));
        B10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B10.setForeground(new java.awt.Color(255, 255, 255));
        B10.setActionCommand("B10");
        B10.setPreferredSize(new java.awt.Dimension(60, 60));

        B11.setBackground(new java.awt.Color(255, 153, 51));
        B11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B11.setForeground(new java.awt.Color(255, 255, 255));
        B11.setActionCommand("B11");
        B11.setPreferredSize(new java.awt.Dimension(60, 60));

        B12.setBackground(new java.awt.Color(255, 153, 51));
        B12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B12.setForeground(new java.awt.Color(255, 255, 255));
        B12.setActionCommand("B12");
        B12.setPreferredSize(new java.awt.Dimension(60, 60));

        B13.setBackground(new java.awt.Color(255, 153, 51));
        B13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B13.setForeground(new java.awt.Color(255, 255, 255));
        B13.setActionCommand("B13");
        B13.setPreferredSize(new java.awt.Dimension(60, 60));

        B14.setBackground(new java.awt.Color(255, 153, 51));
        B14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B14.setForeground(new java.awt.Color(255, 255, 255));
        B14.setActionCommand("B14");
        B14.setPreferredSize(new java.awt.Dimension(60, 60));

        B15.setBackground(new java.awt.Color(255, 153, 51));
        B15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B15.setForeground(new java.awt.Color(255, 255, 255));
        B15.setActionCommand("B15");
        B15.setPreferredSize(new java.awt.Dimension(60, 60));

        B16.setBackground(new java.awt.Color(255, 153, 51));
        B16.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B16.setForeground(new java.awt.Color(255, 255, 255));
        B16.setActionCommand("B16");
        B16.setPreferredSize(new java.awt.Dimension(60, 60));

        B17.setBackground(new java.awt.Color(255, 153, 51));
        B17.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B17.setForeground(new java.awt.Color(255, 255, 255));
        B17.setActionCommand("B17");
        B17.setPreferredSize(new java.awt.Dimension(60, 60));

        B18.setBackground(new java.awt.Color(255, 153, 51));
        B18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B18.setForeground(new java.awt.Color(255, 255, 255));
        B18.setActionCommand("B18");
        B18.setPreferredSize(new java.awt.Dimension(60, 60));

        B19.setBackground(new java.awt.Color(255, 153, 51));
        B19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B19.setForeground(new java.awt.Color(255, 255, 255));
        B19.setActionCommand("B19");
        B19.setPreferredSize(new java.awt.Dimension(60, 60));

        B20.setBackground(new java.awt.Color(255, 153, 51));
        B20.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B20.setForeground(new java.awt.Color(255, 255, 255));
        B20.setActionCommand("B20");
        B20.setPreferredSize(new java.awt.Dimension(60, 60));

        B21.setBackground(new java.awt.Color(255, 153, 51));
        B21.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B21.setForeground(new java.awt.Color(255, 255, 255));
        B21.setActionCommand("B21");
        B21.setPreferredSize(new java.awt.Dimension(60, 60));

        B22.setBackground(new java.awt.Color(255, 153, 51));
        B22.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B22.setForeground(new java.awt.Color(255, 255, 255));
        B22.setActionCommand("B22");
        B22.setPreferredSize(new java.awt.Dimension(60, 60));

        B23.setBackground(new java.awt.Color(255, 153, 51));
        B23.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B23.setForeground(new java.awt.Color(255, 255, 255));
        B23.setActionCommand("B23");
        B23.setPreferredSize(new java.awt.Dimension(60, 60));

        B24.setBackground(new java.awt.Color(255, 153, 51));
        B24.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B24.setForeground(new java.awt.Color(255, 255, 255));
        B24.setActionCommand("B24");
        B24.setPreferredSize(new java.awt.Dimension(60, 60));

        B25.setBackground(new java.awt.Color(255, 153, 51));
        B25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        B25.setForeground(new java.awt.Color(255, 255, 255));
        B25.setActionCommand("B25");
        B25.setPreferredSize(new java.awt.Dimension(60, 60));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(B21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(B11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(B16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 2, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        FillTableButton.setBackground(new java.awt.Color(204, 0, 102));
        FillTableButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        FillTableButton.setForeground(new java.awt.Color(255, 255, 255));
        FillTableButton.setText("Fill Table");
        FillTableButton.setActionCommand("FillTablle");
        FillTableButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FillTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FillTableButtonActionPerformed(evt);
            }
        });

        EnterValueButton.setBackground(new java.awt.Color(0, 51, 153));
        EnterValueButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        EnterValueButton.setForeground(new java.awt.Color(255, 255, 255));
        EnterValueButton.setText("Enter");
        EnterValueButton.setActionCommand("EnterValue");
        EnterValueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterValueButtonActionPerformed(evt);
            }
        });

        jTextField1.setBackground(new java.awt.Color(102, 102, 102));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Enter A Number");

        BLabel.setFont(new java.awt.Font("MV Boli", 1, 48)); // NOI18N
        BLabel.setForeground(new java.awt.Color(255, 51, 153));
        BLabel.setPreferredSize(new java.awt.Dimension(60, 60));

        ILabel.setFont(new java.awt.Font("MV Boli", 1, 48)); // NOI18N
        ILabel.setForeground(new java.awt.Color(255, 204, 0));
        ILabel.setPreferredSize(new java.awt.Dimension(60, 60));

        NLabel.setFont(new java.awt.Font("MV Boli", 1, 48)); // NOI18N
        NLabel.setForeground(new java.awt.Color(0, 255, 0));
        NLabel.setPreferredSize(new java.awt.Dimension(60, 60));

        OLabel.setFont(new java.awt.Font("MV Boli", 1, 48)); // NOI18N
        OLabel.setForeground(new java.awt.Color(255, 0, 0));
        OLabel.setPreferredSize(new java.awt.Dimension(60, 60));

        GLabel.setFont(new java.awt.Font("MV Boli", 1, 48)); // NOI18N
        GLabel.setForeground(new java.awt.Color(51, 0, 204));
        GLabel.setPreferredSize(new java.awt.Dimension(60, 60));

        PauseButton.setBackground(new java.awt.Color(0, 204, 51));
        PauseButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        PauseButton.setForeground(new java.awt.Color(255, 255, 255));
        PauseButton.setText("Pause");
        PauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PauseButtonActionPerformed(evt);
            }
        });

        Opponent.setBackground(new java.awt.Color(255, 51, 51));
        Opponent.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Opponent.setForeground(new java.awt.Color(255, 255, 255));
        Opponent.setText("Look Opponents Board");

        Retry.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Retry.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ILabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FillTableButton)
                    .addComponent(jLabel1)
                    .addComponent(PauseButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Opponent)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EnterValueButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Retry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ILabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(FillTableButton)
                        .addGap(2, 2, 2)
                        .addComponent(PauseButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Retry, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(EnterValueButton)
                        .addGap(18, 18, 18)
                        .addComponent(Opponent, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(170, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void push(int x)
    {
        if(top>=25)
        {
            return;
        }
        else
        {
            stack[top++] = x;
        }
    }
    public void pop()
    {
        --top;
    }
   
    //a function to set distict random numbers to all the buttons on gameboard
    public int giveRandom()
    {
        
        Random rad = new Random();
        x = rad.nextInt(25)+1;
        
        for(int i=0; i<top; i++)
        {
            if(x==stack[i])
            {
                return giveRandom();
            }      
        }
        push(x);
        return x;
        
    }
    
    //function to store the values on buttons in an array
    public void StoreValuesInarray()
    {
        int y=0; //variable for accessing the stack 
        for(int i=0; i<5; i++)
        {
            for(int j=0; j<5; j++)
            {
                ButtonArray[i][j] = stack[y];
                y++;
            }
            System.out.println();
        }
    }
    private void FillTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FillTableButtonActionPerformed
        // TODO add your handling code here:
        
        FillTableButton.setVisible(false);// after clicking the button this button will disappear
        PauseButton.setVisible(true); //
        stack[0] = 0;
        B1.setLabel(""+giveRandom());
        B2.setLabel(""+giveRandom());
        B3.setLabel(""+giveRandom());
        B4.setLabel(""+giveRandom());
        B5.setLabel(""+giveRandom());
        B6.setLabel(""+giveRandom());
        B7.setLabel(""+giveRandom());
        B8.setLabel(""+giveRandom());
        B9.setLabel(""+giveRandom());
        B10.setLabel(""+giveRandom());
        B11.setLabel(""+giveRandom());
        B12.setLabel(""+giveRandom());
        B13.setLabel(""+giveRandom());
        B14.setLabel(""+giveRandom());
        B15.setLabel(""+giveRandom());
        B16.setLabel(""+giveRandom());
        B17.setLabel(""+giveRandom());
        B18.setLabel(""+giveRandom());
        B19.setLabel(""+giveRandom());
        B20.setLabel(""+giveRandom());
        B21.setLabel(""+giveRandom());
        B22.setLabel(""+giveRandom());
        B23.setLabel(""+giveRandom());
        B24.setLabel(""+giveRandom());
        B25.setLabel(""+giveRandom());
        
        StoreValuesInarray();
        
        for(int i=0; i<25; i++)
        {
            pop();
        }
        
        c1.Labeling();
        c1.StoreValuesInarray();
        
        
        
        
    }//GEN-LAST:event_FillTableButtonActionPerformed
    
    public int EnterNumberInGame()
    {
        for(int i=0; i<5; i++)
         {
             for(int j=0; j<5; j++)
             {
                 if(Entry == ButtonArray[i][j])
                     ButtonArray[i][j] =0;
             }
         }//end of for
         
         for(int i=0; i<5; i++)
         {
             for(int j=0; j<5; j++)
             {
                 if(Entry == ButtonArray[i][j])
                     ButtonArray[i][j] =0;
             }
         }//end of for
         
         // the code which helps to change the lable for the Button for the which the entry has done
        int EqualityRCount = 0; 
        int EqualityCCount = 0;
        int EqualityDCount = 0;
        Retry.setText("");
        /**
         * Button B1 
         */
       
        if(Entry == Integer.parseInt(B1.getLabel()))
        {
            
            B1.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[0][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][0] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                     break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][i] == 0)
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                     break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
                
            }
                     
        }//end of if cobdtion for B1
        
        /**
         * Button B2 
         */
        else if(Entry == Integer.parseInt(B2.getLabel()))
        {
            
            B2.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[0][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                     break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][1] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                     break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B2
        
        /**
         * Button B3 
         */
        else if(Entry == Integer.parseInt(B3.getLabel()))
        {
            
            B3.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[0][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                     break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][2] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                     break;
            }//end of for
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
                     
        }//end of if cobdtion for B3
        
        /**
         * Button B4 
         */
        else if(Entry == Integer.parseInt(B4.getLabel()))
        {
            
            B4.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[0][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                     break;

            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][3] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                     break;

            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B4
        
        
        /**
         * Button B5 
         */
        else if(Entry == Integer.parseInt(B5.getLabel()))
        {
            
            B5.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[0][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                     break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                     break;
            }//end of for
            
            //checking for minor Diagonal
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4-i] == 0)
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
           //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B5
        
        /**
         * Button B6 
         */
        else if(Entry == Integer.parseInt(B6.getLabel()))
        {
            
            B6.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[1][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                     break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][0] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                     break;
            }//end of for
            
             if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B6
        
        /**
         * Button B7 
         */
        else if(Entry == Integer.parseInt(B7.getLabel()))
        {
            
            B7.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[1][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][1] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][i] == 0)
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B7
        
        /**
         * Button B8 
         */
        else if(Entry == Integer.parseInt(B8.getLabel()))
        {
            
            B8.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[1][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][2] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B8
        
        /**
         * Button B9 
         */
        else if(Entry == Integer.parseInt(B9.getLabel()))
        {
            
            B9.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[1][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][3] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //checking for minor Diagonal
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4-i] == 0)
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B9
        
        /**
         * Button B10 
         */
        else if(Entry == Integer.parseInt(B10.getLabel()))
        {
            
            B10.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[1][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
           
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B10
        
        /**
         * Button B11 
         */
        else if(Entry == Integer.parseInt(B11.getLabel()))
        {
            
            B11.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[2][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                     break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][0] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                     break;
            }//end of for
            
           //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B11
        
        
        /**
         * Button B12 
         */
        else if(Entry == Integer.parseInt(B12.getLabel()))
        {
            
            B12.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[2][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][1] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B12
        
        
        /**
         * Button B13 
         */
        else if(Entry == Integer.parseInt(B13.getLabel()))
        {
            
            B13.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[2][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][2] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][i] == 0)
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //checking for minor Diagonal
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4-i] == 0 )
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B13
        
        
        /**
         * Button B14 
         */
        else if(Entry == Integer.parseInt(B14.getLabel()))
        {
            
            B14.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[2][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][3] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B14
        
        
        /**
         * Button B15 
         */
        else if(Entry == Integer.parseInt(B15.getLabel()))
        {
            
            B15.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[2][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B15
        
        
        /**
         * Button B16 
         */
        else if(Entry == Integer.parseInt(B16.getLabel()))
        {
            
            B16.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[3][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][0] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B16
        
        
        /**
         * Button B17 
         */
        else if(Entry == Integer.parseInt(B17.getLabel()))
        {
            
            B17.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[3][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][1] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //checking for minor Diagonal
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4-i] == 0 )
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                   case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B17
        
        
        /**
         * Button B18 
         */
        else if(Entry == Integer.parseInt(B18.getLabel()))
        {
            
            B18.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[3][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][2] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
            
                     
        }//end of if cobdtion for B18
        
        
        /**
         * Button B19 
         */
        else if(Entry == Integer.parseInt(B19.getLabel()))
        {
            
            B19.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[3][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][3] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][i] == 0)
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B19
        
        
        
        /**
         * Button B20 
         */
        else if(Entry == Integer.parseInt(B20.getLabel()))
        {
            
            B20.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[3][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
           //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B20
        
        
        /**
         * Button B21 
         */
        else if(Entry == Integer.parseInt(B21.getLabel()))
        {
            
            B21.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[4][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][0] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                    
                }
                else
                     break;
                
            }//end of for
           
            //checking for minor Diagonal
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4-i] == 0 )
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B21             
        
        
        /**
         * Button B22 
         */
        else if(Entry == Integer.parseInt(B22.getLabel()))
        {
            
            B22.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[4][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][1] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B22
        
        
        /**
         * Button B23 
         */
        else if(Entry == Integer.parseInt(B23.getLabel()))
        {
            
            B23.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[4][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][2] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                   case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B23
        
        
        /**
         * Button B24 
         */
        else if(Entry == Integer.parseInt(B24.getLabel()))
        {
            
            B24.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[4][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][3] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            
            //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
               BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B24
        
        
        /**
         * Button B25 
         */
        else if(Entry == Integer.parseInt(B25.getLabel()))
        {
            
            B25.setBackground(Color.darkGray); //It will change the color of the button
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[4][i] == 0)
                {
                    EqualityRCount++;
                    if(EqualityRCount == 5)
                    {
                        BingoCount++;
                        EqualityRCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][4] == 0)
                {
                    EqualityCCount++;
                    if(EqualityCCount == 5)
                    {
                        BingoCount++;
                        EqualityCCount =0;
                    }
                }
                else
                    break;
            }//end of for
            for(int i = 0; i<5; i++)
            {
                if(ButtonArray[i][i] == 0)
                {
                    EqualityDCount++;
                    if(EqualityDCount == 5)
                    {
                        BingoCount++;
                        EqualityDCount =0;
                    }
                }
                else
                    break;
            }//end of for
             //switch condition for results
            if(BingoCount<5)
            {
                switch(BingoCount)
                {
                    case 1: BLabel.setText("B");
                    break;
                    case 2: BLabel.setText("B");
                            ILabel.setText("I");
                    break;
                    case 3: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                    break;
                    case 4: BLabel.setText("B");
                            ILabel.setText("I");
                            NLabel.setText("N");
                            GLabel.setText("G");           
                    break;
                        
                }
            }
            else
            {
                BLabel.setText("B");
                ILabel.setText("I");
                NLabel.setText("N");
                GLabel.setText("G");
                OLabel.setText("O");
            }
                     
        }//end of if cobdtion for B25
        else
        {
            Retry.setText("Retry");
        }
        return BingoCount;
    }
    public int isEntry(int Entry)
    {
        for(int i=0; i<top; i++)
        {
            if(Entry == stack[i])
            {
                return 1;
            }
        }
        return 0;
    }
    int w,z;
    private void EnterValueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterValueButtonActionPerformed
        // TODO add your handling code here:
        //the code that will do a action after clicking the enter
         Retry.setText("");
         Entry = Integer.parseInt(jTextField1.getText());
         if(isEntry(Entry)==1)
         {
             Retry.setText("Re enter");
             jTextField1.setText(null);
             return;
         }
         push(Entry);
         c1.push(Entry);
         w = c1.EnterNumberInGame(Entry);
         if(Entry>25 || Entry<=0)
         {
              Retry.setText("Retry");
              jTextField1.setText("");
              return;
         }
         jTextField1.setText(null);
         z = EnterNumberInGame();
         Entry = giveRandom();
         push(Entry);
         c1.push(Entry);
         w = c1.EnterNumberInGame(Entry);
         z = EnterNumberInGame();
         
         
         if(w>=5 && z>=5 )
         {
             System.out.println("It's a tie");
             c1.setVisible(true);
             new Tie().setVisible(true);
             
         }
         else if(w>=5)
         {
             c1.setVisible(true);
             new ComputerWon().setVisible(true);
            
            
             
         }
         else if(z>=5)
         {
             new WinnerAnnouncedHere().setVisible(true);
         }
         
        
        
    }//GEN-LAST:event_EnterValueButtonActionPerformed

    private void PauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PauseButtonActionPerformed
        // TODO add your handling code here:
       new FirstFrame().setVisible(true);
    }//GEN-LAST:event_PauseButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewGameFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B1;
    private javax.swing.JButton B10;
    private javax.swing.JButton B11;
    private javax.swing.JButton B12;
    private javax.swing.JButton B13;
    private javax.swing.JButton B14;
    private javax.swing.JButton B15;
    private javax.swing.JButton B16;
    private javax.swing.JButton B17;
    private javax.swing.JButton B18;
    private javax.swing.JButton B19;
    private javax.swing.JButton B2;
    private javax.swing.JButton B20;
    private javax.swing.JButton B21;
    private javax.swing.JButton B22;
    private javax.swing.JButton B23;
    private javax.swing.JButton B24;
    private javax.swing.JButton B25;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    private javax.swing.JButton B5;
    private javax.swing.JButton B6;
    private javax.swing.JButton B7;
    private javax.swing.JButton B8;
    private javax.swing.JButton B9;
    private javax.swing.JLabel BLabel;
    private javax.swing.JButton EnterValueButton;
    private javax.swing.JButton FillTableButton;
    private javax.swing.JLabel GLabel;
    private javax.swing.JLabel ILabel;
    private javax.swing.JLabel NLabel;
    private javax.swing.JLabel OLabel;
    private javax.swing.JButton Opponent;
    private javax.swing.JButton PauseButton;
    private javax.swing.JLabel Retry;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
